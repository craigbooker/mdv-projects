$('#home').live("pageshow", function() {
	$.couch.db("taskmgr").view("taskmgr/contexts", {
		success: function(data) {
			//console.log(data);
			$("#contextList").empty();
			$.each(data.rows, function(index, value) {
				var item = (value.value || value.doc);
				$("#contextList").append(
					$('<li>').append(
						$('<a>')
							.attr("href", "context.html?task=" + item.Context)
							.text(item.Context)
					)
				);
			});
			$('#taskList').listview('refresh');
		}
	});	
});
$('#task').live("pageshow", function() {
	var urlData = $(this).data("url");
	//console.log(urlData)
	var urlParts = urlData.split('?');
	// foo?a=1b=2c=3
	var urlPairs = urlParts[1].split('&');
	var urlValues = {};
	for (var pair in urlPairs) {
		var keyValue = urlPairs[pair].split('=');
		var key = decodeURIComponent(keyValue[0]);
		var value = decodeURIComponent(keyValue[1]);
		urlValues[key] = value;
	}
	console.log(urlValues);
});
//-------   Start of: Rebuilt Save Form Data --------------------------
function storeData(key) {
	var id				=	Math.floor(Math.random()*100000000001);
	//getSelectedRadio();
	getCheckboxValue();
	var 	item					=	{};
			item.context	=	["Context: ", $('context').value];
			item.name		=	["Task Name: ", $('name').value];
			item.priority	=	["Priority: ", $('priority').value];
			item.favorite	=	["Favorite: ", $('favorite').value];
			item.sDate		=	["Start Date: ", $('sDate').value];
			item.eDate		=	["End Date: ", $('eDate').value];
			item.dDate		=	["Due Date: ", $('dDate').value];
			item.notes		=	["Notes: ", $('notes').value];
	// Save data into local storage: use stringify to convert our object to a string
	localStorage.setItem(id, JSON.stringify(item));
	alert("Task Saved!");
}
//-------   End of:Rebuilt Save Form Data --------------------------
//-------   Edit Task Data --------------------------
function editItem(id) {
	//Grab Data from Local Storage
	var value = localStorage.getItem(this.key);
	var item = JSON.parse(value);
	//Show the form
	toggleControls("off");
	
	//Populate form fields with current localStorage values
	$('context').value = item.context[1];
	$('name').value = item.name[1];
	$('priority').value = item.priority[1];
	if (item.favorite[1] == "Yes") {
		$('favorite').setAttribute("checked", "checked");
	}
	$('sDate').value = item.sDate[1];
	$('eDate').value = item.eDate[1];
	$('dDate').value = item.dDate[1];
	$('notes').value = item.notes[1];

//Remove the initial listener from the input 'save task' button.
	save.removeEventListner("click", storeData);
	// Change the submit value to say Edit button
	$('submit').value = ("Edit Contact");
	var editSubmit = $('submit');
	//Save the key value established in this function as a property of the editSubmit event
	// so we can use that value when we save the data we edited.
	editSubmit.addEventListener("click", validate);
	editSubmit.key = this.key;
}
//------- End of:  Edit Task Data --------------------------
//------- Start of:  Delete Task Data --------------------------
function deleteTask(id) {
var ask	=	confirm("Are you sure you want to delete this task?");
if (ask) {
	localStorage.removeItem(id);
	window.location.reload();
}	else	{
	alert("Item not removed!");
}
}
//------- End of:  Delete Task Data --------------------------
//-------   Start of: Get Img NEW --------------------------

function getImage(catName, makeSubList) {
	var imageLi	=	document.createElement('li');
	makeSubList.appendChild('imageLi');
	var newImage	=	document.createElement('img');
	var setSrc	=	newImg.setAttribute("src", "images/"+ catName + ".png");
	imageLi.appendChild(newImg);
}
//-------   End of: Get Img NEW --------------------------

//-------   Start of: Rebuilt Find value of the check box. --------------------------
function getCheckboxValue() {
		if ($('favorite').checked) {
			favoriteValue = $('favorite').value;
		} else {
			favoriteValue = ("No");
		}
}
}
//-------   End of: Rebuilt Find value of the check box. --------------------------